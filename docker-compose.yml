version: '3.5'

services:
  web:
    container_name: ${COMPOSE_PROJECT_NAME}_web
    image: nginx:latest
    ports:
      - ${SITE_PORT}:443
    volumes:
      - ./app:/app:ro
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/fastcgi_conf:/etc/nginx/fastcgi_conf:ro
      - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./conf/certs:/certs:ro
    restart: ${RESTART_MODE}
    depends_on:
      - fpm
  fpm:
    container_name: ${COMPOSE_PROJECT_NAME}_fpm
    build:
      context: .
      dockerfile: Dockerfile
    image: "php${PHP_V}_yii:latest"
    environment:
      PHP_V: $PHP_V
    volumes:
      - ./app:/app
      - ./.env:/app/.env
      - "./conf/php/fpm.conf:/etc/php/${PHP_V}/fpm/php-fpm.d/zz-fpm.conf:ro"
      - "./conf/php/php-${APP_MODE}.ini:/etc/php/${PHP_V}/cli/conf.d/zz-php.ini:ro"
      - "./conf/php/php-${APP_MODE}.ini:/etc/php/${PHP_V}/fpm/conf.d/zz-php.ini:ro"
      - ./conf/composer/auth.json:/root/.composer/auth.json:ro
      - ./conf/composer/auth.json:/root/.config/composer/auth.json:ro
    restart: ${RESTART_MODE}
    depends_on:
      - db
  db:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    image: "postgres:${POSTGRES_V}-alpine"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: ${POSTGRES_DATA}
    volumes:
      - "./conf/postgresql:/etc/postgresql/${POSTGRES_V}/main/conf.d"
      - "db-data:${POSTGRES_DATA}"
    restart: ${RESTART_MODE}

volumes:
  db-data:
    name: ${COMPOSE_PROJECT_NAME}_db-data

networks:
    default:
       external:
         name: webproxy
